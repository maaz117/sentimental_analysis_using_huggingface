# -*- coding: utf-8 -*-
"""test_main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1msCiT_DpZdHjrm26-ugFZnCjkVPk3Kg9
"""

from fastapi.testclient import TestClient
from mlops_assignment_02 import app
from mlops_assignment_02 import TextInput
from fastapi.encoders import jsonable_encoder

client = TestClient(app)

def test_positive_sentiment():
    # Define the request payload
    payload = TextInput(text="I love this product, it's fantastic!")

    # Convert TextInput object to JSON-serializable dictionary
    payload_dict = jsonable_encoder(payload)

    # Send a POST request to the sentiment analysis endpoint
    response = client.post("/analyze/", json=payload_dict)

    # Assert that the response status code is 200 OK
    assert response.status_code == 200

    # Assert that the sentiment returned is positive
    # Change the label comparison as per your model's output
    assert response.json()[0]['label'] == "positive", f"Expected Positive, got {response.json()[0]['label']}"

def test_negative_sentiment():
    payload = TextInput(text="I hate this product, it's terrible!")

    payload_dict = jsonable_encoder(payload)

    response = client.post("/analyze/", json=payload_dict)

    assert response.status_code == 200
    assert response.json()[0]['label'] == "negative", f"Expected Negative, got {response.json()[0]['label']}"

def test_neutral_sentiment():
    payload = TextInput(text="It is soso")

    payload_dict = jsonable_encoder(payload)

    response = client.post("/analyze/", json=payload_dict)

    assert response.status_code == 200

    # Assuming 'LABEL_1' is neutral for your model
    assert response.json()[0]['label'] == "neutral", f"Expected Neutral, got {response.json()[0]['label']}"